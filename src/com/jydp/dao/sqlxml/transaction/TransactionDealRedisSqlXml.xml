<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC
		"-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jydp.dao.impl.transaction.TranactionDealRedisDaoImpl">

	<select id="TransactionDealRedis_listTransactionDealRedis" parameterType="java.util.Map" resultType="TransactionDealRedisDO">
		SELECT id, orderNo, paymentType, currencyId, transactionPrice, currencyNumber, currencyTotalPrice, addTime
	  	FROM transaction_deal_redis_tab
	  	WHERE currencyId = #{currencyId}
			AND addTime <![CDATA[ <= ]]> NOW()
		ORDER BY addTime DESC, id DESC
		LIMIT #{num}
	</select>

	<insert id="TransactionDealRedis_insertTransactionDealRedis" parameterType="TransactionDealRedisDO">
		INSERT INTO transaction_deal_redis_tab
			(orderNo, paymentType, currencyId, transactionPrice,
				currencyNumber, currencyTotalPrice, addTime)
		VALUES
			(#{orderNo}, #{paymentType}, #{currencyId}, #{transactionPrice},
			 #{currencyNumber}, #{currencyTotalPrice}, #{addTime})
	</insert>

	<insert id="TransactionDealRedis_insertTransactionDealRedisList" parameterType="java.util.List">
		INSERT INTO transaction_deal_redis_tab
		(orderNo, paymentType, currencyId, transactionPrice,
		 currencyNumber, currencyTotalPrice, addTime)
		VALUES
			<foreach collection="list" item="item" separator=",">
				(#{item.orderNo}, #{item.paymentType}, #{item.currencyId}, #{item.transactionPrice},
				#{item.currencyNumber}, #{item.currencyTotalPrice}, #{item.addTime})
			</foreach>
	</insert>

	<select id="TransactionDealRedis_getNowTurnover" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT SUM(TDRT.currencyNumber) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
			  AND addTime <![CDATA[ <= ]]> NOW()
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getNowVolumeOfTransaction" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT SUM(TDRT.currencyTotalPrice) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
			  AND addTime <![CDATA[ <= ]]> NOW()
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getTodayHighestPrice" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT MAX(TDRT.transactionPrice) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
			  AND addTime <![CDATA[ <= ]]> NOW()
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getTodayLowestPrice" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT MIN(TDRT.transactionPrice) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
			  AND addTime <![CDATA[ <= ]]> NOW()
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getNowLastPrice"  parameterType="java.util.Map" resultType="TransactionDealPriceDTO">
		SELECT max(TDRT.transactionPrice) transactionPrice, TDRT.currencyId,  TDRT.addTime
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime IN (SELECT max(addTime)
									FROM transaction_deal_redis_tab
									WHERE addTime <![CDATA[ <= ]]> #{date}
									<if test="endDate != null">
										AND addTime <![CDATA[ >= ]]> #{endDate}
									</if>
									GROUP BY currencyId)
		GROUP BY TDRT.addTime,TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_listTransactionDealRedisByOrderNo" parameterType="java.lang.String" resultType="TransactionDealRedisDO">
		SELECT id, orderNo, paymentType, currencyId, transactionPrice, currencyNumber, currencyTotalPrice, addTime
		FROM transaction_deal_redis_tab
		WHERE orderNo = #{orderNo}
		ORDER BY addTime DESC, id DESC
	</select>

	<delete id="TransactionDealRedis_deleteDealByOrderNo" parameterType="java.lang.String">
		DELETE  FROM  transaction_deal_redis_tab
		WHERE orderNo = #{orderNo}
	</delete>

	<select id="TransactionDealRedis_getBottomPriceToday" parameterType="java.util.Map" resultType="TransactionBottomPriceDTO">
		SELECT SUM(transactionPrice * currencyNumber) AS totalPrice, SUM(currencyNumber) AS totalNumber, currencyId
		FROM transaction_deal_redis_tab
		WHERE currencyId = #{currencyId}
		  AND orderNo LIKE CONCAT(#{orderNoPrefix}, '%')
		  AND addTime <![CDATA[ <= ]]> NOW()
		  AND addTime <![CDATA[ >= ]]>#{todayData}
	</select>

	<select id="TransactionDealRedis_getCurrentPrice" parameterType="java.util.Map" resultType="double">
		SELECT transactionPrice
		FROM transaction_deal_redis_tab
		WHERE currencyId = #{currencyId}
		  AND orderNo LIKE CONCAT(#{orderNoPrefix}, '%')
		  AND addTime <![CDATA[ <= ]]> NOW()
		ORDER BY addTime DESC, id DESC
		LIMIT 0,1
	</select>

	<select id="TransactionUserDeal_listTransactionUserDealForKline" parameterType="int" resultType="TransactionDealRedisDTO">
		SELECT transactionPrice, currencyNumber, addTime
		FROM transaction_deal_redis_tab
		WHERE currencyId = #{currencyId}
		AND addTime <![CDATA[ <= ]]> NOW()
		ORDER BY addTime, id DESC
	</select>

	<select id="TransactionUserDeal_listTransactionDealForPending" parameterType="java.util.Map" resultType="TransactionDealRedisDO">
		SELECT transactionPrice, SUM(currencyNumber) AS currencyNumber, SUM(currencyTotalPrice) AS currencyTotalPrice
		FROM transaction_deal_redis_tab
		WHERE currencyId = #{currencyId}
			AND paymentType = #{paymentType}
			AND addTime <![CDATA[ >= ]]> #{date}
		GROUP BY transactionPrice
		<if test="paymentType == 1 ">
			DESC
		</if>
		<if test="paymentType == 2 ">
			ASC
		</if>
		LIMIT #{num}
	</select>
</mapper>