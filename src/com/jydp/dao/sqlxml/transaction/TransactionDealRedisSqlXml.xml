<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC
		"-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jydp.dao.impl.transaction.TranactionDealRedisDaoImpl">

	<select id="TransactionDealRedis_listTransactionDealRedis" parameterType="java.util.Map" resultType="TransactionDealRedisDO">
		SELECT paymentType, transactionPrice, currencyNumber, addTime
	  	FROM transaction_deal_redis_tab
	  	WHERE currencyId = #{currencyId}
	  	ORDER BY addTime DESC, orderNo
		LIMIT #{num}
	</select>

	<insert id="TransactionDealRedis_insertTransactionDealRedis" parameterType="TransactionDealRedisDO">
		INSERT INTO transaction_deal_redis_tab
			(orderNo, paymentType, currencyId, transactionPrice,
				currencyNumber, currencyTotalPrice, addTime)
		VALUES
			(#{orderNo}, #{paymentType}, #{currencyId}, #{transactionPrice},
			 #{currencyNumber}, #{currencyTotalPrice}, #{addTime})
	</insert>

	<insert id="TransactionDealRedis_insertTransactionDealRedisList" parameterType="java.util.List">
		INSERT INTO transaction_deal_redis_tab
		(orderNo, paymentType, currencyId, transactionPrice,
		 currencyNumber, currencyTotalPrice, addTime)
		VALUES
			<foreach collection="list" item="item" separator=",">
				(#{item.orderNo}, #{item.paymentType}, #{item.currencyId}, #{item.transactionPrice},
				#{item.currencyNumber}, #{item.currencyTotalPrice}, #{item.addTime})
			</foreach>
	</insert>

	<select id="TransactionDealRedis_getNowTurnover" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT SUM(TDRT.currencyNumber) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getNowVolumeOfTransaction" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT SUM(TDRT.currencyTotalPrice) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getTodayHighestPrice" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT MAX(TDRT.transactionPrice) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getTodayLowestPrice" parameterType="java.sql.Timestamp" resultType="TransactionDealPriceDTO">
		SELECT MIN(TDRT.transactionPrice) transactionPrice,TDRT.currencyId
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime <![CDATA[ >= ]]> #{date}
		GROUP BY TDRT.currencyId
	</select>

	<select id="TransactionDealRedis_getNowLastPrice"  parameterType="java.util.Map" resultType="TransactionDealPriceDTO">
		SELECT max(TDRT.transactionPrice) transactionPrice, TDRT.currencyId,  TDRT.addTime
		FROM transaction_deal_redis_tab  TDRT
		WHERE TDRT.addTime IN (SELECT max(addTime)
									FROM transaction_deal_redis_tab
									WHERE addTime <![CDATA[ <= ]]> #{date}
									AND addTime <![CDATA[ >= ]]> #{endDate}
									GROUP BY currencyId)
		GROUP BY TDRT.addTime,TDRT.currencyId
	</select>

</mapper>