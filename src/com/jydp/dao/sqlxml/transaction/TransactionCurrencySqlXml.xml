<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC
		"-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jydp.dao.impl.transaction.TransactionCurrencyDaoImpl">

	<insert id="TransactionCurrency_insertTransactionCurrency" parameterType="TransactionCurrencyDO"
            useGeneratedKeys="true" keyColumn="currencyId" keyProperty="currencyId">
        INSERT INTO transaction_currency_tab
            (currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
             paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime)
        VALUES
            (#{currencyShortName}, #{currencyName}, #{currencyImg}, #{buyFee}, #{sellFee}, #{guidancePrice},
            #{paymentType}, #{upStatus}, #{rankNumber}, #{backerAccount}, #{ipAddress}, #{upTime}, #{addTime})
    </insert>

	<select id="TransactionCurrency_getTransactionCurrencyByCurrencyId" parameterType="int" resultType="TransactionCurrencyVO">
        SELECT currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE currencyId = #{currencyId}
	</select>

	<update id="TransactionCurrency_updateTransactionCurrency" parameterType="TransactionCurrencyDO">
        UPDATE transaction_currency_tab
        <set>
            <if test="currencyShortName != null and currencyShortName != ''">
                currencyShortName = #{currencyShortName},
            </if>
            <if test="currencyName != null and currencyName !=''">
                currencyName = #{currencyName},
            </if>
            <if test="currencyImg != null and currencyImg !=''">
                currencyImg = #{currencyImg},
            </if>
            <if test="backerAccount != null and backerAccount !=''">
                backerAccount = #{backerAccount},
            </if>
            <if test="ipAddress != null and ipAddress !=''">
                ipAddress = #{ipAddress},
            </if>
            <if test="upStatus != 0">
                upStatus = #{upStatus},
            </if>
            <if test="guidancePrice != 0">
                guidancePrice = #{guidancePrice},
            </if>
            <if test="paymentType != 0">
                paymentType = #{paymentType},
            </if>
            <if test="buyFee >= 0">
                buyFee = #{buyFee},
            </if>
            <if test="sellFee >= 0">
                sellFee = #{sellFee},
            </if>
            <if test="addTime != null">
                addTime = #{addTime},
            </if>
            <if test="upTime != null">
                upTime = #{upTime},
            </if>
        </set>
        WHERE currencyId = #{currencyId}
    </update>

    <delete id="TransactionCurrency_deleteTransactionCurrencyByCurrencyId" parameterType="int">
        DELETE FROM transaction_currency_tab
        WHERE currencyId = #{currencyId}
    </delete>

    <select id="TransactionCurrency_getTransactionCurrencyListForWeb" resultType="TransactionCurrencyVO">
        SELECT  currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE upStatus = 2
    </select>

    <select id="TransactionCurrency_getTransactionCurrencyByCurrencyName" parameterType="java.lang.String" resultType="TransactionCurrencyVO">
        SELECT  currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE currencyName = #{currencyName}
    </select>

    <select id="TransactionCurrency_getTransactionCurrencyByCurrencyShortName" parameterType="java.lang.String" resultType="TransactionCurrencyVO">
        SELECT  currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE currencyShortName = #{currencyShortName}
    </select>

    <select id="TransactionCurrency_countTransactionCurrencyForBack" parameterType="java.util.Map" resultType="int">
        SELECT  COUNT(currencyId)
        FROM transaction_currency_tab
        <where>
            <if test="currencyId != 0">
                AND currencyId = #{currencyId}
            </if>
            <if test="backerAccount != null and backerAccount !=''">
                AND backerAccount LIKE CONCAT('%', #{backerAccount}, '%')
            </if>
            <if test="upStatus != 0">
                AND upStatus = #{upStatus}
            </if>
            <if test="paymentType != 0">
                AND paymentType = #{paymentType}
            </if>
            <if test="startAddTime != null">
                AND addTime <![CDATA[ >= ]]> #{startAddTime}
            </if>
            <if test="endAddTime != null">
                AND addTime <![CDATA[ <= ]]> #{endAddTime}
            </if>
            <if test="startUpTime != null">
                AND upTime <![CDATA[ >= ]]> #{startUpTime}
            </if>
            <if test="endUpTime != null">
                AND upTime <![CDATA[ <= ]]> #{endUpTime}
            </if>
        </where>
    </select>

    <select id="TransactionCurrency_listTransactionCurrencyForBack" parameterType="java.util.Map" resultType="TransactionCurrencyVO">
        SELECT  currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
                 paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        <where>
            <if test="currencyId != 0">
                AND currencyId = #{currencyId}
            </if>
            <if test="backerAccount != null and backerAccount !=''">
                AND backerAccount LIKE CONCAT('%', #{backerAccount}, '%')
            </if>
            <if test="upStatus != 0">
                AND upStatus = #{upStatus}
            </if>
            <if test="paymentType != 0">
                AND paymentType = #{paymentType}
            </if>
            <if test="startAddTime != null">
                AND addTime <![CDATA[ >= ]]> #{startAddTime}
            </if>
            <if test="endAddTime != null">
                AND addTime <![CDATA[ <= ]]> #{endAddTime}
            </if>
            <if test="startUpTime != null">
                AND upTime <![CDATA[ >= ]]> #{startUpTime}
            </if>
            <if test="endUpTime != null">
                AND upTime <![CDATA[ <= ]]> #{endUpTime}
            </if>
        </where>
        ORDER BY rankNumber ASC
        LIMIT #{startNumber}, #{pageSize}
    </select>

    <update id="TransactionCurrency_updatePaymentType" parameterType="java.util.Map">
        UPDATE transaction_currency_tab
        SET paymentType = #{paymentType}
            <if test="backerAccount != null and backerAccount !=''">
                ,backerAccount = #{backerAccount},
            </if>
            <if test="ipAddress != null and ipAddress !=''">
                ipAddress = #{ipAddress}
            </if>
        WHERE currencyId = #{currencyId}
    </update>

    <update id="TransactionCurrency_updateUpStatus" parameterType="java.util.Map">
        UPDATE transaction_currency_tab
        SET upStatus = #{upStatus}
            <if test="backerAccount != null and backerAccount !=''">
                ,backerAccount = #{backerAccount}
            </if>
            <if test="ipAddress != null and ipAddress !=''">
                ,ipAddress = #{ipAddress}
            </if>
            <if test="upTime != null and upStatus == 2">
                ,upTime = #{upTime}
            </if>
        WHERE currencyId = #{currencyId}
    </update>

    <select id="TransactionCurrency_listTransactionCurrencyAll" resultType="TransactionCurrencyDO">
        SELECT  currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
    </select>

    <select id="TransactionCurrency_getTransactionCurrencyMarketForWeb" resultType="TransactionUserDealDTO">
        SELECT currencyId, currencyShortName, currencyName, currencyImg
        FROM transaction_currency_tab
        WHERE upStatus IN (2,3)
        ORDER BY rankNumber ASC
    </select>

    <select id="TransactionCurrency_getTransactionCurrencyMarketForWap" resultType="TransactionUserDealDTO">
        SELECT currencyId, currencyShortName, currencyName, currencyImg
        FROM transaction_currency_tab
        WHERE upStatus IN (2,3)
        ORDER BY rankNumber ASC
    </select>

    <select id="TransactionCurrency_getAllCurrencylistForWeb" resultType="TransactionCurrencyVO">
        SELECT currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        ORDER BY rankNumber ASC
    </select>

    <select id="TransactionCurrency_getOnlineAndSuspensionCurrencyForWeb" resultType="TransactionCurrencyVO">
        SELECT currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
        paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE upStatus IN (2,3)
        ORDER BY rankNumber ASC
    </select>

    <select id="TransactionCurrency_getOnlineAndSuspensionCurrencyForWap" resultType="TransactionCurrencyVO">
        SELECT currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
        paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE upStatus IN (2,3)
        ORDER BY rankNumber ASC
    </select>

    <select id="TransactionCurrency_getTransactionCurrencyByRankNumber" parameterType="int" resultType="int">
        SELECT currencyId, currencyShortName, currencyName, currencyImg, buyFee, sellFee, guidancePrice,
            paymentType, upStatus, rankNumber, backerAccount, ipAddress, upTime, addTime
        FROM transaction_currency_tab
        WHERE rankNumber = #{rankNumber}
    </select>

    <update id="TransactionCurrency_updateCurrencyRankNumber" parameterType="int">
        UPDATE transaction_currency_tab
        SET rankNumber = rankNumber + 1
        WHERE rankNumber <![CDATA[ <= ]]> #{rankNumber}
    </update>

    <update id="TransactionCurrency_upCurrencyRankNumber" parameterType="int">
        UPDATE transaction_currency_tab
        SET rankNumber = rankNumber - 1
        WHERE currencyId = #{currencyId}
    </update>

    <update id="TransactionCurrency_downCurrencyRankNumber" parameterType="int">
        UPDATE transaction_currency_tab
        SET rankNumber = rankNumber + 1
        WHERE currencyId = #{currencyId}
    </update>

    <update id="TransactionCurrency_topCurrencyRankNumber" parameterType="int">
        UPDATE transaction_currency_tab
        SET rankNumber = 1
        WHERE currencyId = #{currencyId}
    </update>

    <select id="TransactionCurrency_listAllTransactionCurrencyBasicInfor" resultType="TransactionCurrencyBasicDTO">
        SELECT currencyId, currencyName, buyFee, sellFee, paymentType, upStatus, rankNumber
        FROM transaction_currency_tab
        ORDER BY upTime DESC
    </select>

    <select id="TransactionCurrency_listcurrencyId" resultType="int">
        SELECT currencyId
        FROM transaction_currency_tab
        WHERE upStatus IN (2,3)
        ORDER BY rankNumber ASC
    </select>

    <select id="TransactionCurrency_listKGraphCurrency" resultType="KGraphCurrencyDTO">
        SELECT currencyId, upStatus
        FROM transaction_currency_tab
    </select>

</mapper>