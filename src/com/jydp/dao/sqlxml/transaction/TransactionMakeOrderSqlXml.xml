<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC
		"-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jydp.dao.impl.transaction.TransactionMakeOrderDaoImpl">

	<insert id="TransactionMakeOrder_insertMakeOrder" parameterType="TransactionMakeOrderDO">
        INSERT INTO transaction_make_order_tab
            (orderNo, currencyId, currencyName, currencyNumber, currencyPrice,
             backerAccount, ipAddress, executeStatus, remark, executeTime, addTime)
        VALUES
            (#{orderNo}, #{currencyId}, #{currencyName}, #{currencyNumber}, #{currencyPrice},
              #{backerAccount}, #{ipAddress}, #{executeStatus}, #{remark}, #{executeTime}, #{addTime})
	</insert>

	<select id="TransactionMakeOrder_getTransactionMakeOrderByOrderNo" parameterType="java.lang.String" resultType="TransactionMakeOrderDO">
        SELECT orderNo, currencyId, currencyName, currencyNumber, currencyPrice,
            backerAccount, ipAddress, executeStatus, remark, executeTime, addTime
        FROM transaction_make_order_tab
        WHERE orderNo = #{orderNo}
	</select>

    <select id="TransactionMakeOrder_countTransactionMakeOrderForBack" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(orderNo)
        FROM transaction_make_order_tab
        WHERE
            1 = 1
            <if test="currencyId != 0">
                AND currencyId = #{currencyId}
            </if>
            <if test="orderNo != null and orderNo !=''">
                AND orderNo LIKE CONCAT('%', #{orderNo}, '%')
            </if>
            <if test="executeStatus != 0">
                AND executeStatus = #{executeStatus}
            </if>
            <if test="startExecuteTime != null">
                AND executeTime <![CDATA[ >= ]]> #{startExecuteTime}
            </if>
            <if test="endExecuteTime != null">
                AND executeTime <![CDATA[ <= ]]> #{endExecuteTime}
            </if>
    </select>

    <select id="TransactionMakeOrder_listTransactionMakeOrderForBack" parameterType="java.util.Map" resultType="TransactionMakeOrderDO">
        SELECT orderNo, currencyId, currencyName, currencyNumber, currencyPrice,
        backerAccount, ipAddress, executeStatus, remark, executeTime, addTime
        FROM transaction_make_order_tab
        WHERE
            1 = 1
            <if test="currencyId != 0">
                AND currencyId = #{currencyId}
            </if>
            <if test="orderNo != null and orderNo !=''">
                AND orderNo LIKE CONCAT('%', #{orderNo}, '%')
            </if>
            <if test="executeStatus != 0">
                AND executeStatus = #{executeStatus}
            </if>
            <if test="startExecuteTime != null">
                AND executeTime <![CDATA[ >= ]]> #{startExecuteTime}
            </if>
            <if test="endExecuteTime != null">
                AND executeTime <![CDATA[ <= ]]> #{endExecuteTime}
            </if>
        ORDER BY executeTime DESC, addTime DESC
        LIMIT #{startNumber}, #{pageSize}
    </select>

    <insert id="TransactionMakeOrder_insertTransactionMakeOrderList" parameterType="java.util.List">
        INSERT INTO transaction_make_order_tab
        (orderNo, currencyId, currencyName, currencyNumber, currencyPrice,
         backerAccount, ipAddress, executeStatus, remark, executeTime, addTime)
        VALUES
            <foreach collection="list" item="item" index="index" separator=",">
                (#{item.orderNo}, #{item.currencyId}, #{item.currencyName}, #{item.currencyNumber},
                #{item.currencyPrice}, #{item.backerAccount}, #{item.ipAddress}, #{item.executeStatus},
                #{item.remark}, #{item.executeTime}, #{item.addTime})
            </foreach>
    </insert>

    <update id="TransactionMakeOrder_updateOrderExecuteStatusByOrderNo" parameterType="java.util.Map">
        UPDATE transaction_make_order_tab
        SET executeStatus = #{executeStatus}
        WHERE orderNo  = #{orderNo}
              AND executeStatus = #{olExecuteStatus}
    </update>

    <update id="TransactionMakeOrder_updateMakeOrderExecuteStatusByOrderNoList" parameterType="java.util.Map">
        UPDATE transaction_make_order_tab
        SET executeStatus = #{executeStatus}
        WHERE executeStatus = #{olExecuteStatus}
          AND orderNo IN
                <foreach collection="orderNoList" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
    </update>

    <select id="TransactionMakeOrder_listTransactionMakeOrderByOrderNoList" parameterType="java.util.List" resultType="TransactionMakeOrderDO">
        SELECT orderNo, currencyId, currencyName, currencyNumber, currencyPrice,
            backerAccount, ipAddress, executeStatus, remark, executeTime, addTime
        FROM transaction_make_order_tab
        WHERE orderNo IN
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
    </select>

    <delete id="TransactionMakeOrder_deleteMakeOrderByOrderNo" parameterType="java.lang.String">
        DELETE FROM transaction_make_order_tab
        WHERE orderNo = #{orderNo}
    </delete>

    <select id="TransactionMakeOrder_listMakeOrderByExecuteStatus" parameterType="java.util.Map" resultType="TransactionMakeOrderDO">
        SELECT orderNo, currencyId, currencyName, currencyNumber, currencyPrice,
            backerAccount, ipAddress, executeStatus, remark, executeTime, addTime
        FROM transaction_make_order_tab
        WHERE executeStatus = #{executeStatus}
            ORDER BY executeTime ASC
        LIMIT #{size}
    </select>

</mapper>