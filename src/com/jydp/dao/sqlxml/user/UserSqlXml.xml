<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC 
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jydp.dao.impl.user.UserDaoImpl">
	
	<insert id="User_insertUser" parameterType="UserDO"  useGeneratedKeys="true" keyColumn="userId" keyProperty="userId">
		INSERT INTO user_tab(userAccount, password, payPassword, phoneAreaCode, phoneNumber, userBalance,
			userBalanceLock, authenticationStatus, accountStatus, payPasswordStatus, addTime)
		VALUES (#{userAccount}, #{password}, #{payPassword}, #{phoneAreaCode}, #{phoneNumber}, #{userBalance},
			#{userBalanceLock}, #{authenticationStatus}, #{accountStatus}, #{payPasswordStatus}, #{addTime})
	</insert>
	
	<select id="User_getUserByUserId" parameterType="int" resultType="UserDO">
		SELECT userId, userAccount, phoneAreaCode, phoneNumber, userBalance,
			userBalanceLock, accountStatus, authenticationStatus, payPasswordStatus, addTime
		FROM user_tab
		WHERE userId = #{userId}
	</select>
	
	<update id="User_updateUserAccountStatus" parameterType="java.util.Map">
 		UPDATE user_tab
		SET accountStatus = #{accountStatus}
 		WHERE userId = #{userId}
 		  AND accountStatus = #{oldAccountStatus}
 	</update>

	<update id="User_updateUserAuthenticationStatus" parameterType="java.util.Map">
 		UPDATE user_tab
		SET authenticationStatus = #{authenticationStatus}
 		WHERE userId = #{userId}
		  AND authenticationStatus = #{oldAuthenticationStatus}
 	</update>

    <update id="User_forgetPayPwd" parameterType="java.util.Map">
        UPDATE user_tab
        SET payPassword = #{payPassword}
        WHERE userId = #{userId}
    </update>

    <update id="User_updatePhone" parameterType="java.util.Map">
        UPDATE user_tab
        SET phoneAreaCode = #{areaCode},phoneNumber = #{phone}
        WHERE userId = #{userId}
    </update>

	<update id="User_updateUser" parameterType="java.util.Map">
		UPDATE user_tab
		SET password = #{password}
		WHERE userAccount = #{userAccount}
			  AND accountStatus <![CDATA[ > ]]> 0
	</update>

	<select id="User_validateUserLogin" parameterType="java.util.Map" resultType="UserDO">
		SELECT userId, userAccount, phoneAreaCode, phoneNumber, userBalance,
			userBalanceLock, accountStatus, payPasswordStatus, addTime
		FROM user_tab
		WHERE userAccount = #{userAccount}
		 	  AND password = #{password}
		 	  AND accountStatus <![CDATA[ > ]]> 0
	</select>

	<select id="User_validateUserPay" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(userId)
		FROM user_tab
		WHERE userAccount = #{userAccount}
		AND payPassword = #{payPassword}
		AND accountStatus <![CDATA[ > ]]> 0
	</select>

	<select id="User_getUserByUserAccount" parameterType="String" resultType="UserDO">
		SELECT userId, userAccount, phoneAreaCode, phoneNumber, userBalance,
			userBalanceLock, authenticationStatus, accountStatus, payPasswordStatus, addTime
		FROM user_tab
		WHERE  userAccount = #{userAccount}
	</select>

	<select id="User_countUserForBacker" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(userId)
		FROM user_tab
		<where>
			<if test="userAccount != null and userAccount != '' ">
				userAccount LIKE CONCAT('%', #{userAccount}, '%')
			</if>
			<if test="phoneAreaCode != null and phoneAreaCode != '' ">
				AND phoneAreaCode = #{phoneAreaCode}
			</if>
			<if test="phoneNumber != null and phoneNumber != '' ">
				AND phoneNumber LIKE CONCAT('%', #{phoneNumber}, '%')
			</if>
			<if test="accountStatus > 0">
				AND accountStatus = #{accountStatus}
			</if>
			<if test="authenticationStatus > 0">
				AND authenticationStatus = #{authenticationStatus}
			</if>
			<if test="startTime != null">
				AND addTime <![CDATA[ >= ]]> #{startTime}
			</if>
			<if test="endTime != null">
				AND addTime <![CDATA[ <= ]]> #{endTime}
			</if>
		</where>
	</select>

	<select id="User_listUserForBacker" parameterType="java.util.Map" resultType="UserDO">
		SELECT  userId, userAccount, phoneAreaCode, phoneNumber, userBalance,
				userBalanceLock, authenticationStatus, accountStatus, payPasswordStatus, addTime
		FROM user_tab
		<where>
			<if test="userAccount != null and userAccount != '' ">
				userAccount LIKE CONCAT('%', #{userAccount}, '%')
			</if>
			<if test="phoneAreaCode != null and phoneAreaCode != '' ">
				AND phoneAreaCode = #{phoneAreaCode}
			</if>
			<if test="phoneNumber != null and phoneNumber != '' ">
				AND phoneNumber LIKE CONCAT('%', #{phoneNumber}, '%')
			</if>
			<if test="accountStatus > 0">
				AND accountStatus = #{accountStatus}
			</if>
			<if test="authenticationStatus > 0">
				AND authenticationStatus = #{authenticationStatus}
			</if>
			<if test="startTime != null">
				AND addTime <![CDATA[ >= ]]> #{startTime}
			</if>
			<if test="endTime != null">
				AND addTime <![CDATA[ <= ]]> #{endTime}
			</if>
		</where>
		ORDER BY addTime DESC
		LIMIT #{startNumber}, #{pageSize}
	</select>

	<select id="User_getUserByPhone" parameterType="String" resultType="UserDO">
		SELECT userId, userAccount, phoneAreaCode, phoneNumber, userBalance,
			userBalanceLock, accountStatus, payPassword, payPasswordStatus, addTime
		FROM user_tab
		WHERE phoneNumber = #{phoneNumber}
	</select>

	<update id="User_updateAddUserAmount" parameterType="java.util.Map">
		UPDATE user_tab
		SET userBalance = userBalance + #{userBalance},
			userBalanceLock = userBalanceLock + #{userBalanceLock}
		WHERE userId = #{userId}
	</update>

	<update id="User_updateReduceUserBalance" parameterType="java.util.Map">
		UPDATE user_tab
		SET userBalance = userBalance - #{userBalance}
		WHERE userId = #{userId}
		  AND userBalance <![CDATA[ >= ]]> #{userBalance}
	</update>

	<update id="User_updateReduceUserBalanceLock" parameterType="java.util.Map">
		UPDATE user_tab
		SET userBalanceLock = userBalanceLock - #{userBalanceLock}
		WHERE userId = #{userId}
		AND userBalanceLock <![CDATA[ >= ]]> #{userBalanceLock}
	</update>

	<select id="User_countCheckUserAmountForTimer" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(userTab.userId)
		FROM user_tab AS userTab
		LEFT JOIN
		(
			SELECT balanceTab.userId,
				SUM(balanceTab.balanceNumber) AS balanceTotal,
				SUM(balanceTab.frozenNumber) AS frozenTotal
			FROM user_balance_tab AS balanceTab
			WHERE balanceTab.currencyId = #{currencyId}
			GROUP BY balanceTab.userId
			HAVING balanceTotal != 0 OR frozenTotal != 0
		) AS balanceTempTab ON  userTab.userId = balanceTempTab.userId
		WHERE (userTab.userBalance - IFNULL(balanceTempTab.balanceTotal, 0)) > #{checkAmount}
		OR (userTab.userBalanceLock - IFNULL(balanceTempTab.frozenTotal, 0)) > #{checkAmountLock}
	</select>

	<select id="User_listCheckUserAmountForTimer" parameterType="java.util.Map" resultType="UserAmountCheckDTO">
		SELECT userTab.userId, balanceTempTab.currencyId,
			(userTab.userBalance - IFNULL(balanceTempTab.balanceTotal, 0)) AS beyondAmount,
			(userTab.userBalanceLock - IFNULL(balanceTempTab.frozenTotal, 0)) AS beyondAmountLock
		FROM user_tab AS userTab
		LEFT JOIN
		(
			SELECT balanceTab.userId, balanceTab.currencyId,
				SUM(balanceTab.balanceNumber) AS balanceTotal,
				SUM(balanceTab.frozenNumber) AS frozenTotal
			FROM user_balance_tab AS balanceTab
			WHERE balanceTab.currencyId = #{currencyId}
			GROUP BY balanceTab.userId
			HAVING balanceTotal != 0 OR frozenTotal != 0
		) AS balanceTempTab ON  userTab.userId = balanceTempTab.userId
		WHERE (userTab.userBalance - IFNULL(balanceTempTab.balanceTotal, 0)) > #{checkAmount}
		OR (userTab.userBalanceLock - IFNULL(balanceTempTab.frozenTotal, 0)) > #{checkAmountLock}
		ORDER BY userTab.userId
		LIMIT #{startNumber}, #{pageSize}
	</select>

	<update id="User_updateUserPayPasswordStatus" parameterType="java.util.Map">
		UPDATE user_tab
		SET payPasswordStatus = #{payPasswordStatus}
		WHERE userId = #{userId}
	</update>

	<select id="User_validateUserPhoneNumber" parameterType="java.util.Map" resultType="UserDO">
		SELECT userId, userAccount, phoneAreaCode, phoneNumber, userBalance,
			userBalanceLock, accountStatus, addTime
		FROM user_tab
		WHERE userAccount = #{userAccount}
		AND phoneAreaCode = #{phoneAreaCode}
		AND phoneNumber = #{phoneNumber}
	</select>

</mapper>